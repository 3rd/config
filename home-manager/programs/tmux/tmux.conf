# sanity
run-shell '\
    export f=$(mktemp) \
    && tmux -f /dev/null -L temp start-server \; list-keys > $f \
    && tmux unbind -a \; source-file $f'

# opts
set -g default-terminal "xterm-256color"
set -g mouse on
set -g visual-activity off
set -sg escape-time 0
set-option -g renumber-windows on
set -as terminal-features ",xterm-256color:RGB"
set-window-option -g xterm-keys on
setw -g monitor-activity on
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
set-option -g focus-events on
set -g history-limit 10000
set -g terminal-overrides ',xterm-24bit:Sync'
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM
set -g alternate-screen off

# tabs
set -g base-index 1
set-window-option -g automatic-rename on
set-window-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g set-titles on

# status
set -g status-interval 1
set -g status-justify centre
set -g status-style bg="#26232f",fg="#9B96B0"
set-window-option -g window-status-separator ''

# left side - lambda with better colors
set -g status-left-length 50
if-shell '[ -n "$SSH_CONNECTION" ]' \
    'set -g status-left "#[bg=#cc2936,fg=#2C2A37,bold] SSH #[bg=#26232f,fg=#aba6bf] #S #[default]"' \
    'set -g status-left " #[bg=#9B96B0,fg=#2C2A37,bold]λ#[fg=#9b96b0,bg=#26232f]#[fg=#aba6bf,nobold] #S #[default]"'

# right side - time and date with powerline
set -g status-right-length 50
set -g status-right "#[bg=#363442,fg=#A5A0BA] %H:%M #[bg=#3F3D4D,fg=#aba6bf] %b %d #[default]"

# default window
set -g window-status-style fg="#5F5B76"
set -g window-status-format " #[fg=#5F5B76]#I#[fg=#4B475C]:#[fg=#5F5B76]#W#{?window_zoomed_flag,#[fg=#9B96B0],} "

# window with activity
set -g window-status-activity-style fg="#cc8800"

# active window
set -g window-status-current-style fg="#B0ACC3"
set -g window-status-current-format " #[fg=#A5A0BA,bold]#I#[fg=#9B96B0]:#[fg=#B0ACC3]#W#{?window_zoomed_flag,#[fg=#B0ACC3],} "

# active pane
set -g window-style 'bg=default'
set -g window-active-style 'bg=default'

# pane separators
set -g pane-active-border-style "bg=default,fg=#413E51"
set -g pane-border-style "bg=default,fg=#2C2A37"

# pane title bar
set -g pane-border-status off
set -g pane-border-format " #{?pane_active,#[fg=#9B96B0],#[fg=#4B475C]}#{pane_current_command} "

# auto-toggle pane border status based on pane count
set-hook -g after-split-window 'if -F "#{>:#{window_panes},1}" "set pane-border-status top"'
set-hook -g after-kill-pane 'if -F "#{==:#{window_panes},1}" "set pane-border-status off"'
set-hook -g after-new-window 'set pane-border-status off'
set-hook -g pane-exited 'if -F "#{==:#{window_panes},1}" "set pane-border-status off"'

# kitty graphics protocol
set -gq allow-passthrough on

# copy/paste
unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe "xclip -selection clipboard -i"\; display-message "Copied to clipboard"
bind / copy-mode

# keymaps
set -g prefix C-a;
bind C-a send-prefix

# meta
bind r source-file ~/.config/tmux/tmux.conf \; display "tmux.conf reloaded!"\; refresh-client
bind-key Q confirm-before kill-server

# sessions
bind-key d detach-client
bind-key t new-session
bind-key q \
  confirm -p 'Kill #S (y/n)?' {
    run-shell "tmux new-window 'sh -c \"tmux-workspace; tmux kill-session -t \\\"#S\\\"\"'"
  }
bind-key ";" run-shell "tmux new-window 'tmux-workspace'"

# tabs
bind c new-window -c "#{pane_current_path}" # new tab
bind-key X kill-window
bind-key < swap-window -t -1
bind-key > swap-window -t +1
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# panes
bind x kill-pane
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# resize with M-arrow
bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5
# prev/next with C-PgUp/C-PgDown
bind -n C-PPage prev
bind -n C-NPage next
# swap windows with prefix+Left/Right
bind Left { swap-window -t -1; previous-window }
bind Right { swap-window -t +1; next-window }
# swap panes with Shift+Arrow
bind -n S-Right swap-pane -s '{right-of}'
bind -n S-Left swap-pane -s '{left-of}'
bind -n S-Up swap-pane -s '{up-of}'
bind -n S-Down swap-pane -s '{down-of}'

# misc
bind f resize-pane -Z
bind-key h split-window -h "htop"
bind - choose-tree
bind ? list-keys
# bind / command-prompt { find-window -Z "%%" }

# <c-a> (I)nstall (U)pdate (Alt-U)Clean
# git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

run '~/.tmux/plugins/tpm/tpm'
