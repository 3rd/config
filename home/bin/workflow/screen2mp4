#!/usr/bin/env bash
IFS=$'\n\t'

if [[ "${BASH_SOURCE[0]}" = "$0" ]]; then
  if [ "$#" -ne 1 ]; then
    echo "screen2mp4 target.mp4"
    exit 0
  fi

  OUTPUT="${1%.mp4}.mp4"

  read -r -p "Record audio? [y/N] " audio
  case $audio in
    [Yy]*)
      source=$(pactl list sources short | grep bluez | awk '{print $1}')
      audio=(-f pulse -ac 2 -i "$source")
      audio_conv=(-c:a aac)
      ;;
    *)
      audio=()
      ;;
  esac

  if [ ${#audio[@]} -eq 0 ]; then
    read -r -p "Record microphone? [y/N] " mic
    case $mic in
      [Yy]*)
        audio=(-f pulse -ac 2 -i default)
        audio_conv=(-c:a aac)
        ;;
      *) ;;
    esac
  fi

  slop=$(slop -f "%x %y %w %h %g %i") || exit 1
  IFS=$' ' read -r X Y W H _ < <(echo """$slop")
  W=$((W + W % 2))
  H=$((H + H % 2))

  trap '' INT
  echo "Recording..."

  if [ ${#audio[@]} -gt 0 ]; then
    ffmpeg -loglevel "16" -f "x11grab" -framerate "60" -s "${W}x$H" -i ":0.0+$X,$Y" "${audio[@]}" -preset ultrafast -pix_fmt yuv420p "$OUTPUT".mkv
  else
    ffmpeg -loglevel "16" -f "x11grab" -framerate "60" -s "${W}x$H" -i ":0.0+$X,$Y" -preset ultrafast -pix_fmt yuv420p "$OUTPUT".mkv
  fi
  trap - INT
  if [ ${#audio_conv[@]} -gt 0 ]; then
    ffmpeg -i "$OUTPUT".mkv -c copy "${audio_conv[@]}" -movflags +faststart "$OUTPUT"
  else
    ffmpeg -i "$OUTPUT".mkv -c copy -movflags +faststart "$OUTPUT"
  fi
  rm "$OUTPUT".mkv
  while true; do
    read -r -p "Preview? [y/N] " preview
    case $preview in
      [Yy]*)
        mpv "$OUTPUT"
        break
        ;;
      *)
        break
        ;;
    esac
  done
fi
