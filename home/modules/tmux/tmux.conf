# opts
set -g default-terminal "tmux-256color"
set -g mouse on
set -g visual-activity on
set -sg escape-time 0
set-option -g renumber-windows on
set -as terminal-features ",xterm-256color:RGB"
set-window-option -g xterm-keys on
setw -g monitor-activity on
set -s extended-keys on
set -as terminal-features 'xterm*:extkeys'
set-option -g focus-events on
set -g history-limit 100000

# tabs
set -g base-index 1
set-window-option -g automatic-rename off
set-option -g set-titles on

# keymaps
set -g prefix C-a;
bind C-a send-prefix
bind r source-file ~/.config/tmux/tmux.conf \; display "tmux.conf reloaded!"\; refresh-client
bind-key Q confirm-before kill-server
bind-key t detach-client
bind-key t new-session
bind-key q confirm-before kill-session
bind c new-window -c "#{pane_current_path}" # new tab
bind-key X kill-window # kill tab
bind-key < swap-window -t -1
bind-key > swap-window -t +1
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind x kill-pane
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Down resize-pane -D 5
bind -n M-Up resize-pane -U 5
bind -n C-PPage prev
bind -n C-NPage next
bind -n S-PPage swap-window -t -1
bind -n S-NPage swap-window -t +1
bind-key ";" run-shell "tmux new-window 'tmux-workspace'"
bind-key h split-window -h "htop"
bind / command-prompt { find-window -Z "%%" }
bind f resize-pane -Z

# vim - https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# bind-key -n C-Left { swap-window -t -1; previous-window }
# bind-key -n C-Right { swap-window -t +1; next-window }
bind Left { swap-window -t -1; previous-window }
bind Right { swap-window -t +1; next-window }

# status
set -g status-interval 1
set -g status-justify absolute-centre
set -g status-style bg="#1c1e22",fg="#9da3af"

# left side
set -g status-left-length 90
# set -g status-left " #S "

# right side
set -g status-right-length 90
# set -g status-right " #(who | cut -d \" \" -f1)@#h "

# default window
set -g window-status-style bg="#1c1e22",fg="#9da3af"
set -g window-status-format ' #I #W '

# active window
set -g window-status-current-style bg="#2e3238",fg="#e3e5e8"
set -g window-status-current-format ' #I #W '

# active pane
# set -g window-style "bg=#17191c"
# set -g window-active-style "bg=#17191c"

# pane separators
set -g pane-active-border-style "bg=default,fg=#2e3238"
set -g pane-border-style "fg=#373c43"

# kitty graphics protocol
set -gq allow-passthrough on
